
services:
  frontend:
    build: ./frontend
    environment:
      NEXT_PUBLIC_API_PORT: ${NEXT_PUBLIC_API_PORT}
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - backend
    networks: 
      - app-network

  backend:
    build: ./backend
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_NAMEDB: ${PG_NAMEDB}
      PG_HOST: ${PG_HOST}
      SECRET_KEY: ${SECRET_KEY}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      API_PORT: ${NEXT_PUBLIC_API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${NEXT_PUBLIC_API_PORT}:${NEXT_PUBLIC_API_PORT}"
    restart: always
    networks:
      - app-network

  postgres:
    image: postgres:17-alpine3.20
    restart: always 
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_NAMEDB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_NAMEDB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  jenkins_home:
